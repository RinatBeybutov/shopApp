##
## Запуск сервисов
##

#version: '3.8'
networks:
  spring-cloud-network:
    driver: bridge

services:
  dozzle:
    image: amir20/dozzle:latest
    container_name: logView
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080

  gateway:
    build:
      ./gateway
    container_name: gateway
    ports:
      - "80:80"
    environment:
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=8081
      - ORDER_SERVICE_HOST=order-service
      - ORDER_SERVICE_PORT=8082
    networks:
      - spring-cloud-network

  user-service:
    build: ./userService
    container_name: userService
    depends_on:
      - db-postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgres:5432/pizzeria
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVER_PORT=8081
    ports:
      - "8081:8081"
    networks:
      - spring-cloud-network

  order-service:
    build: ./orderService
    container_name: orderService
    depends_on:
      - db-postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgres:5432/pizzeria
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - FLYWAY_URL=jdbc:postgresql://db-postgres:5432/pizzeria
    ports:
      - "8082:8082"
    networks:
      - spring-cloud-network

  db-postgres:
    image: 'postgres:13-alpine'
    container_name: db-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pizzeria
    volumes:
      - .:/docker-entrypoint-initdb.d
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "5400:5432"
    networks:
      - spring-cloud-network

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    command:
      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    env_file:
      - ./.env
    ports:
      - 8200:8080
    volumes:
      - type: bind
        source: ./keycloak/realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
        read_only: false
    depends_on:
      db-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - spring-cloud-network